{"ast":null,"code":"var _jsxFileName = \"/home/miguelgarciacarrasco/personal-workspaces/todo-list/packages/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskRow } from './components/TaskRow';\nimport { TaskCreator } from './components/TaskCreator';\nimport { VisibilityControl } from './components/VisibilityControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [taskItems, setTaskItems] = useState([{\n    name: 'task 1',\n    done: false\n  }]);\n  const [showCompleted, setshowCompleted] = useState(false);\n  useEffect(() => {\n    let data = localStorage.getItem('tasks');\n    localStorage.getItem('showCompletedLS') && setshowCompleted(JSON.parse(localStorage.getItem('showCompletedLS')));\n\n    if (data != null) {\n      setTaskItems(JSON.parse(data));\n    } else {\n      setTaskItems([{\n        name: 'task 1 sdfgn',\n        done: false\n      }, {\n        name: 'task 2',\n        done: false\n      }]);\n      setshowCompleted(false);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(taskItems));\n  }, [taskItems]);\n  useEffect(() => {\n    localStorage.setItem('showCompletedLS', JSON.stringify(showCompleted));\n  }, [showCompleted]);\n\n  const renderItems = doneValue => {\n    return taskItems.filter(task => task.done === doneValue).map(task => /*#__PURE__*/_jsxDEV(TaskRow, {\n      task: task,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask\n    }, task.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this));\n  };\n\n  const createNewTask = taskName => {\n    if (!taskItems.find(t => t.name === taskName)) {\n      setTaskItems([...taskItems, {\n        name: taskName,\n        done: false\n      }]);\n    }\n  };\n\n  const toggleTask = task => {\n    return setTaskItems(taskItems.map(t => t.name === task.name ? { ...t,\n      done: !t.done\n    } : t));\n  };\n\n  const deleteTask = taskName => {\n    setTaskItems(taskItems.filter(task => task.name !== taskName));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TaskBanner, {\n      taskItems: taskItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(TaskCreator, {\n        callback: createNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderItems(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(VisibilityControl, {\n          description: \"Completed Tasks\",\n          isChecked: showCompleted,\n          callback: checked => setshowCompleted(checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), showCompleted && /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description of completed tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderItems(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"7iWi58YqrDzNOLsHqvMhi0IiFHA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/miguelgarciacarrasco/personal-workspaces/todo-list/packages/frontend/src/App.js"],"names":["React","useState","useEffect","TaskBanner","TaskRow","TaskCreator","VisibilityControl","App","taskItems","setTaskItems","name","done","showCompleted","setshowCompleted","data","localStorage","getItem","JSON","parse","setItem","stringify","renderItems","doneValue","filter","task","map","toggleTask","deleteTask","createNewTask","taskName","find","t","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskRow } from './components/TaskRow';\nimport { TaskCreator } from './components/TaskCreator';\nimport { VisibilityControl } from './components/VisibilityControl';\n\nconst App = () => {\n    const [taskItems, setTaskItems] = useState([\n        { name: 'task 1', done: false },\n    ]);\n\n    const [showCompleted, setshowCompleted] = useState(false);\n\n    useEffect(() => {\n        let data = localStorage.getItem('tasks');\n\n        localStorage.getItem('showCompletedLS') &&\n            setshowCompleted(\n                JSON.parse(localStorage.getItem('showCompletedLS'))\n            );\n\n        if (data != null) {\n            setTaskItems(JSON.parse(data));\n        } else {\n            setTaskItems([\n                { name: 'task 1 sdfgn', done: false },\n                { name: 'task 2', done: false },\n            ]);\n            setshowCompleted(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('tasks', JSON.stringify(taskItems));\n    }, [taskItems]);\n\n    useEffect(() => {\n        localStorage.setItem('showCompletedLS', JSON.stringify(showCompleted));\n    }, [showCompleted]);\n\n    const renderItems = doneValue => {\n        return taskItems\n            .filter(task => task.done === doneValue)\n            .map(task => (\n                <TaskRow\n                    task={task}\n                    key={task.name}\n                    toggleTask={toggleTask}\n                    deleteTask={deleteTask}\n                />\n            ));\n    };\n\n    const createNewTask = taskName => {\n        if (!taskItems.find(t => t.name === taskName)) {\n            setTaskItems([...taskItems, { name: taskName, done: false }]);\n        }\n    };\n\n    const toggleTask = task => {\n        return setTaskItems(\n            taskItems.map(t =>\n                t.name === task.name ? { ...t, done: !t.done } : t\n            )\n        );\n    };\n\n    const deleteTask = taskName => {\n        setTaskItems(taskItems.filter(task => task.name !== taskName));\n    };\n\n    return (\n        <div className=\"App\">\n            <TaskBanner taskItems={taskItems} />\n\n            <div className=\"container-fluid\">\n                <TaskCreator callback={createNewTask} />\n\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <th>Description</th>\n                            <th>Done</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>{renderItems(false)}</tbody>\n                </table>\n\n                <div className=\"p-4\">\n                    <VisibilityControl\n                        description=\"Completed Tasks\"\n                        isChecked={showCompleted}\n                        callback={checked => setshowCompleted(checked)}\n                    />\n                </div>\n                {showCompleted && (\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>Description of completed tasks</th>\n                                <th>Done</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>{renderItems(true)}</tbody>\n                    </table>\n                )}\n            </div>\n        </div>\n    );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}