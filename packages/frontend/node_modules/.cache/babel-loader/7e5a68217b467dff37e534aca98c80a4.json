{"ast":null,"code":"var _jsxFileName = \"/home/miguelgarciacarrasco/personal-workspaces/todo-list/packages/frontend/src/components/TaskCreator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskCreator = props => {\n  _s();\n\n  const [newTaskName, setNewTaskName] = useState('');\n\n  const updateNewTaskValue = e => setNewTaskName(e.target.value);\n\n  const handleKeypress = e => {\n    if (e.charCode === 13) {\n      createNewTask();\n    }\n  };\n\n  const createNewTask = () => {\n    props.callback(newTaskName);\n    setNewTaskName(' ');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: newTaskName,\n      onChange: updateNewTaskValue,\n      onKeyPress: handleKeypress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-1\",\n      onClick: createNewTask,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskCreator, \"v4FZxXatlQomWENXDNva8Rjkumg=\");\n\n_c = TaskCreator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCreator\");","map":{"version":3,"sources":["/home/miguelgarciacarrasco/personal-workspaces/todo-list/packages/frontend/src/components/TaskCreator.jsx"],"names":["React","useState","TaskCreator","props","newTaskName","setNewTaskName","updateNewTaskValue","e","target","value","handleKeypress","charCode","createNewTask","callback"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMK,kBAAkB,GAAGC,CAAC,IAAIF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9C;;AAEA,QAAMC,cAAc,GAAGH,CAAC,IAAI;AACxB,QAAIA,CAAC,CAACI,QAAF,KAAe,EAAnB,EAAuB;AACnBC,MAAAA,aAAa;AAChB;AACJ,GAJD;;AAMA,QAAMA,aAAa,GAAG,MAAM;AACxBT,IAAAA,KAAK,CAACU,QAAN,CAAeT,WAAf;AACAC,IAAAA,cAAc,CAAC,GAAD,CAAd;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,KAAK,EAAED,WAHX;AAII,MAAA,QAAQ,EAAEE,kBAJd;AAKI,MAAA,UAAU,EAAEI;AALhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAEE,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA9BM;;GAAMV,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react';\n\nexport const TaskCreator = props => {\n    const [newTaskName, setNewTaskName] = useState('');\n\n    const updateNewTaskValue = e => setNewTaskName(e.target.value);\n\n    const handleKeypress = e => {\n        if (e.charCode === 13) {\n            createNewTask();\n        }\n    };\n\n    const createNewTask = () => {\n        props.callback(newTaskName);\n        setNewTaskName(' ');\n    };\n\n    return (\n        <div className=\"my-1\">\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                value={newTaskName}\n                onChange={updateNewTaskValue}\n                onKeyPress={handleKeypress}\n            />\n            <button className=\"btn btn-primary mt-1\" onClick={createNewTask}>\n                +\n            </button>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}