{"version":3,"sources":["apiRequests/index.ts","components/TaskBanner.jsx","components/TaskRow.jsx","components/TaskCreator.jsx","components/VisibilityControl.jsx","App.js","index.js"],"names":["fetchData","a","axios","get","response","data","console","log","postNewTask","task","post","deleteTaskRequest","_id","delete","status","TaskBanner","props","className","allTasks","filter","t","done","length","TaskRow","name","type","checked","onChange","toggleTask","onClick","deleteTask","deleteSVG","enableBackground","height","id","version","viewBox","width","xmlns","d","fill","x","y","points","TaskCreator","useState","newTaskName","setNewTaskName","createNewTask","callback","value","e","target","onKeyPress","charCode","VisibilityControl","isChecked","description","App","setAllTasks","showCompleted","setshowCompleted","useEffect","fetchedTasks","dealWithAsynchronous","localStorage","setItem","JSON","stringify","renderItems","doneValue","map","taskName","find","newTaskSaved","task_id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35c33e29.chunk.js","sourcesContent":["import axios from 'axios'\n\nimport { Task } from '../interfaces'\n\nconst fetchData = async () => {\n\ttry {\n\t\tconst response = await axios.get('http://localhost:3006/tasks')\n\t\treturn response.data\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\nconst postNewTask = async (task: Task) => {\n\ttry {\n\t\tconst response = await axios.post('http://localhost:3006/tasks/postNewTask', task)\n\t\treturn response.data\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\nconst deleteTaskRequest = async (_id: any) => {\n\ttry {\n\t\tconst response = await axios.delete(`http://localhost:3006/tasks/deleteTask/${_id}`)\n\n\t\treturn response.status === 200 ? true : false\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\nexport { fetchData, postNewTask, deleteTaskRequest }\n","import React from 'react';\n\nexport const TaskBanner = props => {\n    return (\n        <>\n            <h4 className=\"text-center p-4\">TODO-List</h4>\n            <p className=\"text-center\">\n                {props.allTasks.filter(t => !t.done).length} tasks to do\n            </p>\n        </>\n    );\n};\n","import React from 'react'\n\nexport const TaskRow = (props) => (\n\t<tr key={props.task.name}>\n\t\t<td>{props.task.name}</td>\n\t\t<td>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tchecked={props.task.done}\n\t\t\t\tonChange={() => props.toggleTask(props.task)}\n\t\t\t/>\n\t\t</td>\n\t\t<td>\n\t\t\t<div className=\"pl-1\" onClick={() => props.deleteTask(props.task.name)}>\n\t\t\t\t{deleteSVG}\n\t\t\t</div>\n\t\t</td>\n\t</tr>\n)\n\nconst deleteSVG = (\n\t<svg\n\t\tenableBackground=\"new 0 0 512 512\"\n\t\theight=\"20px\"\n\t\tid=\"Layer_1\"\n\t\tversion=\"1.1\"\n\t\tviewBox=\"0 0 512 512\"\n\t\twidth=\"20px\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t>\n\t\t<g>\n\t\t\t<path\n\t\t\t\td=\"M444.852,66.908h-99.339V47.04c0-21.943-17.792-39.736-39.736-39.736h-99.339   c-21.944,0-39.736,17.793-39.736,39.736v19.868H67.363v19.868h20.47l19.887,377.489c0,21.944,17.792,39.736,39.736,39.736h218.546   c21.944,0,39.736-17.792,39.736-39.736l19.538-377.489h19.577V66.908z M186.57,47.04c0-10.962,8.926-19.868,19.868-19.868h99.339   c10.962,0,19.868,8.906,19.868,19.868v19.868H186.57V47.04z M385.908,463.236l-0.039,0.505v0.524   c0,10.943-8.906,19.868-19.868,19.868H147.455c-10.942,0-19.868-8.925-19.868-19.868v-0.524l-0.019-0.523L107.72,86.776h297.669   L385.908,463.236z\"\n\t\t\t\tfill=\"#37404D\"\n\t\t\t/>\n\t\t\t<rect fill=\"#37404D\" height=\"317.885\" width=\"19.868\" x=\"246.173\" y=\"126.511\" />\n\t\t\t<polygon\n\t\t\t\tfill=\"#37404D\"\n\t\t\t\tpoints=\"206.884,443.757 186.551,126.493 166.722,127.753 187.056,445.017  \"\n\t\t\t/>\n\t\t\t<polygon\n\t\t\t\tfill=\"#37404D\"\n\t\t\t\tpoints=\"345.649,127.132 325.82,125.891 305.777,443.776 325.606,445.017  \"\n\t\t\t/>\n\t\t</g>\n\t</svg>\n)\n","import React, { useState } from 'react';\n\nexport const TaskCreator = props => {\n    const [newTaskName, setNewTaskName] = useState('');\n\n    const updateNewTaskValue = e => setNewTaskName(e.target.value);\n\n    const handleKeypress = e => {\n        if (e.charCode === 13) {\n            createNewTask();\n        }\n    };\n\n    const createNewTask = () => {\n        props.callback(newTaskName);\n        setNewTaskName(' ');\n    };\n\n    return (\n        <div className=\"my-1\">\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                value={newTaskName}\n                onChange={updateNewTaskValue}\n                onKeyPress={handleKeypress}\n            />\n            <button className=\"btn btn-primary mt-1\" onClick={createNewTask}>\n                +\n            </button>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const VisibilityControl = props => {\n    return (\n        <div className=\"form-check\">\n            <label>\n                <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    checked={props.isChecked}\n                    onChange={e => props.callback(e.target.checked)}\n                />\n                Show {props.description}\n            </label>\n        </div>\n    );\n};\n","import React, { useState, useEffect } from 'react'\n\nimport { fetchData, postNewTask, deleteTaskRequest } from './apiRequests'\n\nimport { TaskBanner } from './components/TaskBanner'\nimport { TaskRow } from './components/TaskRow'\nimport { TaskCreator } from './components/TaskCreator'\nimport { VisibilityControl } from './components/VisibilityControl'\n\nconst App = () => {\n\tconst [allTasks, setAllTasks] = useState([])\n\tconst [showCompleted, setshowCompleted] = useState(false)\n\n\tuseEffect(() => {\n\t\tasync function dealWithAsynchronous() {\n\t\t\tconst fetchedTasks = await fetchData()\n\t\t\tconsole.log('fetchedTasks', fetchedTasks)\n\t\t\tfetchedTasks ? setAllTasks(fetchedTasks) : setAllTasks([{ name: 'illo', done: false }])\n\t\t}\n\n\t\tdealWithAsynchronous()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('showCompletedLS', JSON.stringify(showCompleted))\n\t}, [showCompleted])\n\n\tconst renderItems = (doneValue) => {\n\t\treturn allTasks\n\t\t\t.filter((task) => task.done === doneValue)\n\t\t\t.map((task) => (\n\t\t\t\t<TaskRow\n\t\t\t\t\ttask={task}\n\t\t\t\t\tkey={task.name}\n\t\t\t\t\ttoggleTask={toggleTask}\n\t\t\t\t\tdeleteTask={() => deleteTask(task._id)}\n\t\t\t\t/>\n\t\t\t))\n\t}\n\n\tconst createNewTask = async (taskName) => {\n\t\tif (!allTasks.find((t) => t.name === taskName)) {\n\t\t\tconst newTaskSaved = await postNewTask({ name: taskName, done: false })\n\t\t\tsetAllTasks([...allTasks, newTaskSaved])\n\t\t}\n\t}\n\n\tconst toggleTask = (task) => {\n\t\treturn setAllTasks(allTasks.map((t) => (t.name === task.name ? { ...t, done: !t.done } : t)))\n\t}\n\n\tconst deleteTask = async (task_id) => {\n\t\tconst deletedTask = await deleteTaskRequest(task_id)\n\t\tdeletedTask && setAllTasks(allTasks.filter((task) => task._id !== task_id))\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<TaskBanner allTasks={allTasks} />\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<TaskCreator callback={createNewTask} />\n\t\t\t\t<table className=\"table table-striped table-bordered\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t\t\t<th>Done</th>\n\t\t\t\t\t\t\t<th>Delete</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{renderItems(false)}</tbody>\n\t\t\t\t</table>\n\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t<VisibilityControl\n\t\t\t\t\t\tdescription=\"Completed Tasks\"\n\t\t\t\t\t\tisChecked={showCompleted}\n\t\t\t\t\t\tcallback={(checked) => setshowCompleted(checked)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{showCompleted && (\n\t\t\t\t\t<table className=\"table table-striped table-bordered\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Description of completed tasks</th>\n\t\t\t\t\t\t\t\t<th>Done</th>\n\t\t\t\t\t\t\t\t<th>Delete</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>{renderItems(true)}</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}